swagger: "2.0"

schemes:
    - http
consumes:
    - application/json
produces:
    - application/json
info:
    description: Currency Conversion Project
    title: Currency Conversion Project
    version: 1.0.0

basePath: /api

components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

paths:
    /login:
        post:
            tags:
                - Login
            parameters:
                - name: login
                  in: body
                  schema:
                      $ref: "#/definitions/login"
            responses:
                200:
                    description: Login
                    schema:
                        example: {
	                                "token": "your_token"
                                 }
                default:
                    description: generic error response
                    schema:
                        $ref: "#/definitions/error"
    /user-wallet-accounts:
        get:
            tags:
                - User Wallet Accounts
            security:
                - BearerAuth: []   # Use OAuth with a different scope
            responses:
                200:
                    description: User Wallet Accounts
                401:
                    schema: 
                        example: {
                                "data": [
                                    {
                                        "Balance": "97749.032",
                                        "Code": "TRY"
                                    },
                                    {
                                        "Balance": "1030",
                                        "Code": "USD"
                                    },
                                    {
                                        "Balance": "1020",
                                        "Code": "EUR"
                                    }
                                ],
                                "message": "success"
                            }
                default:
                    description: generic error response
                    schema:
                        $ref: "#/definitions/error"
    /create-exchage-offer:
        post:
            tags:
                - Create Exchange Offer
            parameters:
                - name: create-exchange-offer
                  in: body
                  schema:
                      $ref: "#/definitions/create-exchange-offer"
            responses:
                200:
                    description: Create Exchange Offer
                    schema:
                        example: {
                                    "data": {
                                        "id": 3,
                                        "base_currency_id": 3,
                                        "counter_currency_id": 2,
                                        "price": "1.1301404",
                                        "markup_rate": "0.6"
                                    },
                                    "message": "success"
                                }
                default:
                    description: generic error response
                    schema:
                        $ref: "#/definitions/error"
    /send-offer:
        post:
            tags:
                - Send Offer
            parameters:
                - name: send-offer
                  in: body
                  schema:
                      $ref: "#/definitions/send-offer"
            responses:
                200:
                    description: Send Offer
                    schema: 
                        example: {
                                    "data": {
                                        "user_id": 1,
                                        "base_currency_id": 3,
                                        "counter_currency_id": 2,
                                        "price": "11.301",
                                        "markup_rate": "0.6",
                                        "amount": "10"
                                    },
                                    "message": "success"
                                }
                default:
                    description: generic error response
                    schema:
                        $ref: "#/definitions/error"
definitions:
    login:
        type: object
        required:
            - email
            - password
        properties:
            email:
                type: string
                format: email
                minLength: 5
                maxLength: 255
                example: example@example.com
            password:
                type: string
                format: password
                minLength: 5
                maxLength: 255
                example: your_password
    create-exchange-offer:
        type: object
        required:
            - base_currency
            - counter_currency
        properties:
            base_currency:
                type: string
                minLength: 3
                maxLength: 3
                example: USD
            counter_currency:
                type: string
                minLength: 3
                maxLength: 3
                example: TRY
    send-offer:
        type: object
        required:
            - base_currency
            - counter_currency
        properties:
            base_currency:
                type: string
                minLength: 3
                maxLength: 3
                example: USD
            counter_currency:
                type: string
                minLength: 3
                maxLength: 3
                example: TRY
            amount:
                type: number
                minimum: 0
                example: ~0
        
    error:
        type: object
        properties:
            code:
                type: integer
                format: int64
            message:
                type: string
    UnauthorizedError:
        description: Access token is missing or invalid